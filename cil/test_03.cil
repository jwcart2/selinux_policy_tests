;; Xen ocontext rules

(handleunknown deny)

(class cl01 (p01a p01b))
(class cl02 ())
(class cl03 (p03a p03b))
(class cl04 (p04a p04b))
(class clx (ioctl))
(classorder (cl01 cl02 cl03 cl04 clx))

(common cm01 (p11a p11b))
(common cm02 (p22a p22b))

(classcommon cl01 cm01)
(classcommon cl02 cm02)

(sid kernel)
(sid security)
(sid unlabeled)
(sidorder (kernel security unlabeled))

(defaultuser cl01 source)
(defaultuser cl02 source)
(defaultuser cl03 source)
(defaultrole cl01 source)
(defaulttype cl02 target)
(defaultrange cl03 target low-high)

(mls true)

(sensitivity s01)
(sensitivity s02)
(sensitivity s03)
(sensitivityorder (s01 s02 s03))

(sensitivityalias syslow)
(sensitivityalias syshigh)
(sensitivityalias maxsens)
(sensitivityaliasactual syslow s01)
(sensitivityaliasactual syshigh s03)
(sensitivityaliasactual maxsens s03)

(category c01)
(category c02)
(category c03)
(categoryorder (c01 c02 c03))

(categoryalias cat01)
(categoryalias cat02a)
(categoryalias cat02b)
(categoryaliasactual cat01 c01)
(categoryaliasactual cat02a c02)
(categoryaliasactual cat02b c02)

(sensitivitycategory s02 (c01 c03))
(sensitivitycategory s03 ((range c01 c03)))

(mlsconstrain (cl01 (p01a)) (and (dom h1 h2) (domby l1 h1)))
(mlsvalidatetrans cl02 (or (eq l1 l2) (incomp l1 l2)))

(policycap network_peer_controls)
(policycap open_perms)

(typeattribute cil_gen_require)
(typeattribute at01)
(typeattribute at02)

(roleattribute cil_gen_require)
(roleattribute ar01)
(roleattribute ar02)

(boolean b01 false)
(boolean b02 true)

(type tpo)
(type tpx)
(type tp01)
(type tp02)
(type tp03p)
(type tp03c)
(type tp04)

(typealias ta01a)
(typealias ta01b)
(typealias ta02)

(typealiasactual ta01a tp01)
(typealiasactual ta01b tp01)
(typealiasactual ta02 tp02)

(typebounds tp03p tp03c)

(typeattributeset at01 (tp01))
(typeattributeset at02 (tp01 tp02))

(typepermissive tp01)

(allow tp01 self (cl01 (p11a p01a)))
(allow tp01 tp01 (cl01 (p01b)))
(allow tp01 at01 (cl01 (p11b)))
(allow tp01 tpo (cl02 (p22a)))
(allow at02 tpo (cl02 (p22b)))
(allow tp03p tpo (cl03 (p03a p03b)))
(allow tp03c tpo (cl03 (p03a)))
(allow tp04 tpx (clx (ioctl)))
(auditallow tp01 tpo (cl01 (p01a)))
(dontaudit tp01 tpo (cl01 (p01b)))
(neverallow tp01 tpo (cl01 (p11a)))

;;(allowx tp04 tpx (ioctl clx (0x1234)))
;;(auditallowx tp04 tpx (ioctl clx (0x9911)))
;;(dontauditx tp04 tpx (ioctl clx (0x9922)))
;;(neverallowx tp04 tpx (ioctl clx (0x9933)))

(typetransition tp01 tpo cl01 tp02)
(typemember tp01 tpo cl02 tp02)
(typechange tp01 tpo cl03 tp02)
(typetransition tp01 tpo cl04 "file01" tp02)

(rangetransition tp01 tpo cl01 ((s02) (s02)))
(rangetransition tp01 tpo cl02 ((s02) (s03 (c01 cat02a))))

(role object_r)
(role rl01)
(role rl02)
(role rl03p)
(role rl03c)

(roletype object_r tpo)
(roletype object_r tpx)
(roletype object_r tp01)
(roletype object_r tp02)
(roletype object_r tp03p)
(roletype object_r tp03c)
(roletype object_r tp04)
(roletype rl01 tp01)
(roletype rl01 tp02)
(roletype rl02 tp02)
(roletype rl03p tp03p)
(roletype rl03c tp03c)

(roleattributeset ar01 (rl01))
(roleattributeset ar02 (rl01 rl02))

(roleallow rl01 rl02)

(roletransition rl01 tpo cl01 rl02)

(user us01)
(userrole us01 object_r)
(userrole us01 rl01)
(userlevel us01 (s01))
(userrange us01 ((s01) (s03 (range c01 c03))))

(constrain (cl01 (p01b)) (not (and (eq t1 tpo) (neq u1 u2))))
(validatetrans cl02 (or (eq u1 u2) (eq r1 r2)))

(sidcontext kernel (us01 rl01 tp01 ((syslow) (syshigh (c01 cat02b c03)))))
(sidcontext security (us01 rl01 tp01 ((s01) (s02))))
(sidcontext unlabeled (us01 rl01 tp01 ((s02 (c01 c03)) (maxsens (cat01 c03)))))

;; XEN
(pirqcon 65535 (us01 rl01 tp01 ((s01) (s01))))
(iomemcon (0 99999) (us01 rl01 tp01 ((s01) (s01))))
(ioportcon (0 99999) (us01 rl01 tp01 ((s01) (s01))))
(pcidevicecon 99999 (us01 rl01 tp01 ((s01) (s01))))
(devicetreecon "/PATH" (us01 rl01 tp01 ((s01) (s01))))